//////////////////////////////////////////////////////////////////////////////
//! \file sac2_scene.hpp
//! \author
//!     Chengwu HUANG
//! \version
//!     0.1 (development version)
//! \date
//!     2013-08-21
//! \brief
//!     Provides Scene class.
//////////////////////////////////////////////////////////////////////////////

#ifndef SAC2_SCENE_HPP
#define SAC2_SCENE_HPP

#include <sac2_type.hpp>
#include <sac2_game_object.hpp>

namespace sac2
{

typedef unsigned int depth_t;

enum
{
  FOREGROUND = 10,
  MIDGROUND  = 20,
  BACKGROUND = 30
};

//////////////////////////////////////////////////////////////////////////////
//! \brief
//!     
//////////////////////////////////////////////////////////////////////////////
typedef unsigned int scene_id_t;

typedef std::map<depth_t, std::map<object_id_t, GameObject*>> object_map_t;

//////////////////////////////////////////////////////////////////////////////
//! \class Scene
//! \brief
//!     Scene
//////////////////////////////////////////////////////////////////////////////
class Scene
{
public:
  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////


  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Public default constructor
  ////////////////////////////////////////////////////////////////////////////
  Scene();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Public destructor
  ////////////////////////////////////////////////////////////////////////////
  Scene(const Scene& scene);

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  Scene& operator=(const Scene& scene);

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  ~Scene();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  void render();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  void clean();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  void update(float dt);

  GameObject* get_object(object_id_t id) const;
  void add_object(depth_t z, object_id_t id, GameObject* object);
  void remove_object(object_id_t id);
protected:
  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     
  ////////////////////////////////////////////////////////////////////////////
  scene_id_t m_identifier;

private:
  object_map_t m_object_map;

};  // class Scene

}

#endif //! SAC2_SCENE_HPP

