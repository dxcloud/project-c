//////////////////////////////////////////////////////////////////////////////
//! \file sac2_game_object.inl
//! \author
//!     Chengwu HUANG
//! \version
//!     0.2 (alpha)
//! \date
//!     2013-04-08: Initial develepment.
//////////////////////////////////////////////////////////////////////////////

#ifndef SAC2_GAME_OBJECT_HPP_INCLUDE
#define SAC2_GAME_OBJECT_HPP_INCLUDE

namespace sac2
{

//////////////////////////////////////////////////////////////////////////////
// GameObject::GameObject
//////////////////////////////////////////////////////////////////////////////
inline GameObject::GameObject():
  m_layer(FOREGROUND),
  m_property(NO_PROPERTY)
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::GameObject
//////////////////////////////////////////////////////////////////////////////
inline GameObject::GameObject(layer_t layer):
  m_layer(layer),
  m_property(NO_PROPERTY)
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::~GameObject
//////////////////////////////////////////////////////////////////////////////
inline GameObject::~GameObject()
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::is_renderable
//////////////////////////////////////////////////////////////////////////////
inline bool GameObject::is_renderable() const
{
  if (m_property & RENDERING) { return true; }
  else { return false; }
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::is_triggerable
//////////////////////////////////////////////////////////////////////////////
inline bool GameObject::is_triggerable() const
{
  if (m_property & TRIGGERING) { return true; }
  else { return false; }
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::is_collidable
//////////////////////////////////////////////////////////////////////////////
inline bool GameObject::is_collidable() const
{
  if (m_property & TRIGGERING) { return true; }
  else { return false; }
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::get_layer
//////////////////////////////////////////////////////////////////////////////
inline layer_t GameObject::get_layer() const
{
  return m_layer;
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::set_layer
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::set_layer(layer_t layer)
{
  m_layer = layer;
}

////////////////////////////////////////////////////////////////////////////
// GameObject::operator<
//////////////////////////////////////////////////////////////////////////////
inline bool GameObject::operator<(const GameObject& object)
{
  return this->m_layer < object.m_layer;
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::rendering
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::rendering()
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::triggering
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::triggering()
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::colliding
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::colliding()
{
  // do nothing
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::set_rendering
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::set_rendering(bool rendering)
{
  if (true == rendering) { m_property = m_property | RENDERING; }
  else { m_property = m_property & RENDERING; }
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::set_triggering
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::set_triggering(bool triggering)
{
  if (true == triggering) { m_property = m_property | TRIGGERING; }
  else { m_property = m_property & RENDERING; }
}

//////////////////////////////////////////////////////////////////////////////
// GameObject::set_colliding
//////////////////////////////////////////////////////////////////////////////
inline void GameObject::set_colliding(bool colliding)
{
  if (true == colliding) { m_property = m_property | COLLIDING; }
  else { m_property = m_property & RENDERING; }
}

} // namespace sac2

#endif // SAC2_GAME_OBJECT_HPP_INCLUDE

