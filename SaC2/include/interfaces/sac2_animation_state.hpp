//////////////////////////////////////////////////////////////////////////////
//! \file sac2_animation_state.hpp
//! \author
//!     Chengwu HUANG
//! \version
//!     0.1 (alpha)
//! \date
//!     2014-05-05
//! \brief
//!     Provides 2D animation manipulation class.
//////////////////////////////////////////////////////////////////////////////

#ifndef SAC2_ANIMATION_STATE_HPP
#define SAC2_ANIMATION_STATE_HPP

#include <sac2_animation.hpp>

namespace sac2
{

//////////////////////////////////////////////////////////////////////////////
//! \class AnimationState
//! \brief
//! \see
//!     Animation, AnimationStateMachine
//////////////////////////////////////////////////////////////////////////////
class AnimationState
{
public:
  friend class AnimateSprite;

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  AnimationState();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  virtual ~AnimationState();

  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  animation_state_t update(animation_state_t state, float dt);

protected:
  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  Animation& animation();

private:
  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  virtual animation_state_t handle(animation_state_t state, float dt) = 0;

private:
  ////////////////////////////////////////////////////////////////////////////
  //! \brief
  //!     Allows to call constructor and destructor of private attribute.
  ////////////////////////////////////////////////////////////////////////////
  Animation m_animation;
};

}  // namspace sac2

// include inline methods
#include <sac2_animation_state.inl>

#endif  //! SAC2_ANIMATION_STATE_HPP

